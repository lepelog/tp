/* d_meter_hakusha.cpp autogenerated by split.py v0.3 at 2021-01-02 05:39:40.804826 */

#include "d/d_com/d_com_inf_game/d_com_inf_game.h"
#include "global.h"

extern "C" {
int strcmp(const char*, const char*);
void __ct__9J2DScreenFv(void);
void __dl__FPv(void);
void __nw__FUl(void);
void getGlobalVtx__8CPaneMgrFP7J2DPanePA3_A4_fUcbsCenter(void);
void paneTrans__8CPaneMgrFff(void);
void CPaneMgr_X1_(void);
void getAlphaRate__13CPaneMgrAlphaFv(void);
void hide__13CPaneMgrAlphaFv(void);
void setAlphaRate__13CPaneMgrAlphaFf(void);
void show__13CPaneMgrAlphaFv(void);
void getLayerNo__14dComIfG_play_cFi(int);
void drawPikari__13dMeter2Draw_cFP8CPaneMgrPffQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorQ28JUtility6TColorfUcHakusha(void);
void setAlphaAnimeMax__13dMeter2Draw_cFP13CPaneMgrAlphas(void);
void setAlphaAnimeMin__13dMeter2Draw_cFP13CPaneMgrAlphas(void);
void alphaAnimeHakusha__15dMeterHakusha_cFUl(void);
void getHakushaNum__15dMeterHakusha_cFv(void);
void setAlphaButtonAnimeMax__15dMeterHakusha_cFv(void);
void setAlphaButtonAnimeMin__15dMeterHakusha_cFv(void);
void setAlphaHakushaAnimeMax__15dMeterHakusha_cFv(void);
void setAlphaHakushaAnimeMin__15dMeterHakusha_cFv(void);
void updateHakusha__15dMeterHakusha_cFv(void);
void dPaneClass_showNullPane(void);
void draw__9J2DScreenFffPC14J2DGrafContext(void);
void setPriority__9J2DScreenFPCcUlP10JKRArchive(void);
}

// additional symbols needed for d_meter_hakusha.cpp
// autogenerated by split.py v0.3 at 2021-01-02 05:39:40.792760
extern u8 lbl_8045480C;
extern u8 lbl_80454810;
extern u8 lbl_80454800;
extern u8 lbl_803981B0;
extern u8 lbl_803BF2B8;
extern u8 lbl_803BF288;
extern u8 lbl_80454814;
extern u8 lbl_80454804;
extern u8 lbl_80454808;
extern u8 lbl_80454818;
extern u8 lbl_803A6F88;
extern u8 lbl_803BB6D4;
extern u8 lbl_80430188;
extern u8 lbl_8042EBC8;

extern "C" {
// __ct__15dMeterHakusha_cFPv
// dMeterHakusha_c::dMeterHakusha_c(void*)
asm void dMeterHakusha_c(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020C320.s"
}

// __dt__15dMeterHakusha_cFv
// dMeterHakusha_c::~dMeterHakusha_c(void)
asm void func_8020C384(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020C384.s"
}

// _create__15dMeterHakusha_cFv
// dMeterHakusha_c::_create(void)
asm void func_8020C400(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020C400.s"
}

// _execute__15dMeterHakusha_cFUl
// dMeterHakusha_c::_execute(unsigned long)
asm void func_8020C808(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020C808.s"
}

// draw__15dMeterHakusha_cFv
// dMeterHakusha_c::draw(void)
asm void func_8020C850(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020C850.s"
}

// _delete__15dMeterHakusha_cFv
// dMeterHakusha_c::_delete(void)
asm void func_8020CABC(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020CABC.s"
}

// alphaAnimeHakusha__15dMeterHakusha_cFUl
// dMeterHakusha_c::alphaAnimeHakusha(unsigned long)
asm void alphaAnimeHakusha__15dMeterHakusha_cFUl(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020CC58.s"
}

// updateHakusha__15dMeterHakusha_cFv
// dMeterHakusha_c::updateHakusha(void)
asm void updateHakusha__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020CD6C.s"
}

// setAlphaHakushaAnimeMin__15dMeterHakusha_cFv
// dMeterHakusha_c::setAlphaHakushaAnimeMin(void)
asm void setAlphaHakushaAnimeMin__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020D258.s"
}

// setAlphaHakushaAnimeMax__15dMeterHakusha_cFv
// dMeterHakusha_c::setAlphaHakushaAnimeMax(void)
asm void setAlphaHakushaAnimeMax__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020D308.s"
}

// setAlphaButtonAnimeMin__15dMeterHakusha_cFv
// dMeterHakusha_c::setAlphaButtonAnimeMin(void)
asm void setAlphaButtonAnimeMin__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020D3B8.s"
}

// setAlphaButtonAnimeMax__15dMeterHakusha_cFv
// dMeterHakusha_c::setAlphaButtonAnimeMax(void)
asm void setAlphaButtonAnimeMax__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020D41C.s"
}

// getHakushaNum__15dMeterHakusha_cFv
// dMeterHakusha_c::getHakushaNum(void)
asm void getHakushaNum__15dMeterHakusha_cFv(void) {
    nofralloc
#include "d/d_meter/d_meter_hakusha/asm/func_8020D480.s"
}
};
