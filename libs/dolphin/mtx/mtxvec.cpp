//
// Generated By: dol2asm
// Translation Unit: mtxvec
//

#include "dolphin/mtx/mtxvec.h"
#include "dol2asm.h"
#include "dolphin/types.h"

//
// Declarations:
//

/* 80346D6C-80346DC0 3416AC 0054+00 0/0 158/158 826/826 .text            PSMTXMultVec */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXMultVec(const Mtx matrix, const Vec* src, Vec* dst) {
    nofralloc
#include "asm/dolphin/mtx/mtxvec/PSMTXMultVec.s"
}
#pragma pop

/* 80346DC0-80346E4C 341700 008C+00 0/0 2/2 3/3 .text            PSMTXMultVecArray */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXMultVecArray(const Mtx matrix, const Vec* src, Vec* dst, u32 count) {
    nofralloc
#include "asm/dolphin/mtx/mtxvec/PSMTXMultVecArray.s"
}
#pragma pop

/* 80346E4C-80346EA0 34178C 0054+00 0/0 47/47 9/9 .text            PSMTXMultVecSR */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXMultVecSR(const Mtx matrix, const Vec* src, Vec* dst) {
    nofralloc
#include "asm/dolphin/mtx/mtxvec/PSMTXMultVecSR.s"
}
#pragma pop

/* 80346EA0-80346F28 3417E0 0088+00 0/0 2/2 0/0 .text            PSMTXMultVecArraySR */
#pragma push
#pragma optimization_level 0
#pragma optimizewithasm off
asm void PSMTXMultVecArraySR(const Mtx matrix, const Vec* src, Vec* dst, u32 count) {
    nofralloc
#include "asm/dolphin/mtx/mtxvec/PSMTXMultVecArraySR.s"
}
#pragma pop
